stages:
  - build
  - test
  - deliver

variables:
  MONGO_DB_URL: 'mongodb+srv://gustavwvjohansson:kBEpmXAUtCaPuAkP@refridgecluster.fieialy.mongodb.net/'
  NODE_ENV: 'production'

cache:
  paths:
    - client/node_modules/

build_backend:
  stage: build
  image: node:14-alpine
  script:
    - npm cache clean --force
    - cd backend
    - npm install --legacy-peer-deps
    - npm install v8-compile-cache
    - npm install eslint-utils
    - npm run lint
    - npm run format

test_app:
  stage: test
  image: node:14-alpine
  variables:
    MONGO_DB_URL: ${MONGO_DB_URL}
  services:
    - name: mongo:latest
      alias: mongo
  script:
    - cd backend/client
    - npm install
    - npm test -- --coverage --watchAll=false

deliver:
  stage: deliver
  image: docker:latest
  services:
    - name: docker:dind
    - name: mongo:latest
      alias: mongo
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_PROJECT_DIR
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  environment:
    name: production
  only:
    - main
