stages:
  - build
  - test
  - deploy

variables:
  MONGO_DB_URL: "mongodb://my-vps-ip:27017/mydatabase"
  NODE_ENV: "production"

build_app:
  stage: build
  image: node:14-alpine
  script:
    - cd app
    - npm install
    - npm run build

test_app:
  stage: test
  image: node:14-alpine
  variables:
    MONGO_DB_URL: ${MONGO_DB_URL}
  services:
    - name: mongo:latest
  before_script:
    - cd app
    - npm install
    - npm start &
    - sleep 10 # wait for MongoDB to start
  script:
    - npm run test
    - npm install -g newman
    - newman run tests/postman_collection.json

deploy_app:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:latest $CI_PROJECT_DIR -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:latest 
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA 
  environment:
    name: production
    url: https://example.com
  only:
    - master
