stages:
  - build
  # - test
  - deliver

variables:
  MONGO_DB_URL: 'mongodb://mongo:27017/mydatabase'
  NODE_ENV: 'production'

cache:
  paths:
    - backend/node_modules/
    - frontend/node_modules/
services:
  - name: mongo:latest
    alias: mongo

# build_api:
#   stage: build
#   image: node:14-alpine
#   script:
#     - cd frontend && npm install
#     - npm run lint
#     - npm run prettier -- --write .

build_mobileapp:
  stage: build
  image: node:14-alpine
  script:
    - cd backend && npm install
    - npm run lint
    - npm run prettier -- --write .

# test_api:
#   stage: test
#   image: node:14-alpine
#   variables:
#     MONGO_DB_URL: ${MONGO_DB_URL}
#   services:
#     - name: mongo:latest # add MongoDB container definition
#       alias: mongo
#   before_script:
#     - cd api
#     - npm install
#     - npm start &
#     - sleep 10 # wait for MongoDB to start
#   script:
#     - npm run test
#     - npm install -g newman
#     - newman run tests/api_test/postman_collection.json
deliver:
  stage: deliver
  image: docker:latest
  services:
    - name: docker:dind
    - name: mongo:latest
      alias: mongo
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_PROJECT_DIR
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  environment:
    name: production
  # only:
  #   - master
